{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","name","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","console","log","document","body","style","backgroundColor","color","heading","value","onChange","event","target","rows","placeholder","onMouseOver","caretColor","darkColor","newText","toUpperCase","showAlert","toLowerCase","getElementById","select","navigator","clipboard","writeText","split","join","match","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","setDarkColor","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81e9a144.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n      \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n\r\n            {/* \r\n            \r\n            SINGLE DARK MODE\r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlhtmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n            </div> */}\r\n\r\n            <div className=\"dropdown\">\r\n              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dark Mode\r\n              </button>\r\n\r\n              <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"dropdownMenuButton2\">\r\n\r\n                <li>\r\n                  <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={()=>{props.toogleMode('blue')}}/>\r\n                      <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                        Dark Blue\r\n                      </label>\r\n                  </div>\r\n                </li>\r\n\r\n                <li>\r\n                  <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={()=>{props.toogleMode('red')}}/>\r\n                      <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                        Dark Red\r\n                      </label>\r\n                  </div>\r\n                </li>\r\n\r\n                <li>\r\n                  <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={()=>{props.toogleMode('green')}}/>\r\n                      <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                        Dark Green\r\n                      </label>\r\n                  </div>\r\n                </li>\r\n\r\n                <li><hr className=\"dropdown-divider\"/></li>\r\n\r\n                <li>\r\n                  <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={()=>{props.toogleMode('light')}}/>\r\n                      <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                        Light Mode\r\n                      </label>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'About'\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleLcClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=> {\r\n        setText(\"\");\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const onMouseOverEvent = (event)=>{\r\n        event.target.style.caretColor = props.mode==='dark'?'white':'black';\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    console.log(document.body.style.backgroundColor);\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" placeholder=\"Enter text here\" style={{backgroundColor: props.mode==='dark'?'#8f8f8f':'white',\r\n                   color: props.mode==='dark'?'white':'black' }} onMouseOver={onMouseOverEvent}></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.darkColor==='blue'?'primary': props.darkColor==='red'?'danger': props.darkColor==='green'?'success':'dark'} mx-1 my-1`} onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className={`btn btn-${props.darkColor==='blue'?'primary': props.darkColor==='red'?'danger': props.darkColor==='green'?'success':'dark'} mx-1 my-1`} onClick={handleLcClick}>Convert to LowerCase</button>\r\n            <button className={`btn btn-${props.darkColor==='blue'?'primary': props.darkColor==='red'?'danger': props.darkColor==='green'?'success':'dark'} mx-1 my-1`} onClick={handleClearClick}>Clear</button>\r\n            <button className={`btn btn-${props.darkColor==='blue'?'primary': props.darkColor==='red'?'danger': props.darkColor==='green'?'success':'dark'} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n            <button className={`btn btn-${props.darkColor==='blue'?'primary': props.darkColor==='red'?'danger': props.darkColor==='green'?'success':'dark'} mx-1 my-1`} onClick={handleExtraSpace}>Remove Extra Space</button>\r\n        </div>\r\n\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{(text.match(/\\S+/g))?(text.match(/\\S+/g)).length:0} words and {text.length} characters</p>\r\n            <p>{0.008 * (text.split(\" \").length)} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"/*Enter something to preview it here.*/\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n ","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, { useState } from 'react'\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [darkColor, setDarkColor] = useState('light');\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toogleMode = (color)=>{\n    if(color === 'light'){\n      setMode('light');\n      setDarkColor('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('dark');\n      if(color === 'blue'){\n        setDarkColor('blue');\n        document.body.style.backgroundColor = '#042743';\n        showAlert(\"Dark Blue mode has been enabled\", \"success\");\n      }\n      else if(color === 'red') {\n        setDarkColor('red');\n        document.body.style.backgroundColor = \"#850909\";\n        showAlert(\"Dark Red mode has been enabled\", \"success\");\n      }\n      else{\n        setDarkColor('green');\n        document.body.style.backgroundColor = \"#106115\";\n        showAlert(\"Dark Green mode has been enabled\", \"success\");\n      }\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toogleMode={toogleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\"> \n      {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n            <TextForm showAlert= {showAlert} heading=\"Enter the Text to analyze below\" mode={mode} darkColor={darkColor}/>\n            {/* </Route>\n      </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}